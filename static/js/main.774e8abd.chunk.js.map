{"version":3,"sources":["pictures/responsive.svg","pictures/my-picture.JPG","pictures/address.png","pictures/phone.jpg","pictures/mail.png","components/Navbar.js","components/Home.js","components/AboutMe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","state","isOpen","handleToggle","_this","setState","react_default","a","createElement","className","src","Responsive","alt","index_esm","onClick","this","Component","AboutMe","MyPicture","Address","Phone","Mail","App","Fragment","Navbar_Navbar","Home_AboutMe","AboutMe_AboutMe","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2OCMnBC,6MACnBC,MAAQ,CACNC,QAAQ,KAEVC,aAAe,WACbC,EAAKC,SAAS,CACZH,QAASE,EAAKH,MAAMC,kFAItB,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAYC,IAAI,qBAE5BN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAChBH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAcJ,UAAU,WAAWK,QAASC,KAAKZ,gBAEnDG,EAAAC,EAAAC,cAAA,MACEC,UACEM,KAAKd,MAAMC,OAAS,yBAA2B,iBAGjDI,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,+BA1B0BQ,iFCAfC,mLAEjB,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKQ,IAAWN,IAAI,MAE3BN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACSF,EAAAC,EAAAC,cAAA,8BAETF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKE,IAAKS,IAASP,IAAI,YACvBN,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKE,IAAKU,IAAOR,IAAI,UACrBN,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKE,IAAKW,IAAMT,IAAI,SACpBN,EAAAC,EAAAC,cAAA,mDAxBuBQ,aCJhBC,mLAEjB,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,0CAJ6BQ,aCiBtBM,mLAVX,OACEhB,EAAAC,EAAAC,cAACF,EAAAC,EAAMgB,SAAP,KACEjB,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,cANUV,aCKEW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sECXNC,IAASC,OACP3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.774e8abd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/responsive.fd87b895.svg\";","module.exports = __webpack_public_path__ + \"static/media/my-picture.b5b5f104.JPG\";","module.exports = __webpack_public_path__ + \"static/media/address.d8074763.png\";","module.exports = __webpack_public_path__ + \"static/media/phone.bef46a70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mail.6d431c3d.png\";","import React, { Component } from \"react\";\r\nimport { FaAlignRight } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Responsive from \"./../pictures/responsive.svg\";\r\n\r\nexport default class Navbar extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n  handleToggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-style\">\r\n        <div className=\"logo\">\r\n          <img src={Responsive} alt=\"responsive pict\" />\r\n        </div>\r\n        <button className=\"nav-btn\">\r\n          <FaAlignRight className=\"nav-icon\" onClick={this.handleToggle} />\r\n        </button>\r\n        <ul\r\n          className={\r\n            this.state.isOpen ? \"listing-style show-nav\" : \"listing-style\"\r\n          }\r\n        >\r\n          <li>Home</li>\r\n          <li>About Me</li>\r\n          <li>Skills</li>\r\n          <li>Projects</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MyPicture from \"./../pictures/my-picture.JPG\";\r\nimport Address from \"./../pictures/address.png\";\r\nimport Phone from \"./../pictures/phone.jpg\";\r\nimport Mail from \"./../pictures/mail.png\";\r\n\r\nexport default class AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about\">\r\n        <div className=\"picture-about\">\r\n          <img src={MyPicture} alt=\"\" />\r\n        </div>\r\n        <div className=\"text-about\">\r\n          <h3>Hello, my name is</h3>\r\n          <h1>Bojan KrstiÄ‡</h1>\r\n          <h2>\r\n            I am a <span>Web Developer</span>\r\n          </h2>\r\n          <div className=\"info\">\r\n            <article>\r\n              <img src={Address} alt=\"address\" />\r\n              <span>Pirot, Serbia</span>\r\n            </article>\r\n            <article>\r\n              <img src={Phone} alt=\"phone\" />\r\n              <span>+381641555562</span>\r\n            </article>\r\n            <article>\r\n              <img src={Mail} alt=\"mail\" />\r\n              <span>krstic.bojan80@gmail.com</span>\r\n            </article>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about-me\">\r\n        <p>This is part about me</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport AboutMe from \"./components/AboutMe\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <Home />\n        <AboutMe />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}